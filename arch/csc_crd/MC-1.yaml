# yaml-language-server: $schema=../../schemas/testplan_schema.json

MC-1:
  name: MC-1
  long_name: LONG NAME
  family: Microcontroller
  
  # semantic version within the CRD family
  version: "1.0"

  description: |
    MC-1 can be though of as a minimal 32-bit RISC-V processor with M-mode support:

    * The Unprivileged ISA is RV32I with a few extensions suitable for a basic microcontroller
    * The M-mode features are those listed as mandatory in the RISC-V Privileged ISA manual.

    Key features not included in MC-1 (i.e., OUT OF SCOPE):

    * Interrupt Controller (e.g., CLIC, CLINT, PLIC)
    * Features for modes other than M-mode
    * PMP
    * Debug & trace (TBD)

  # Specification versions
  tsc_profile: null # None for MC-1
  unpriv_isa_manual_revision: "20191213"
  priv_isa_manual_revision: "20190608-Priv-MSU-Ratified"
  debug_manual_revision: "0.13.2"

# XXX - Remove version information since specifying priv/unpriv ISA manual should imply this.
  extensions:
    mandatory:
    - name: I
      version: "~> 2.1"
    - name: C
      version: "~> 2.2"
      param_constraints:
          MUTABLE_MISA_C:
            schema:
              const: false
    - name: M
      version: "~> 2.0"
    - name: Zicsr
      version: "~> 2.0"
    - name: Zicntr
      version: "~> 2.0"
    - name: Sm
      version: "~> 1.11"
      param_constraints:
          MTVEC_BASE_ALIGNMENT_DIRECT: {} # Unconstrained
          MTVEC_BASE_ALIGNMENT_VECTORED: {} # Unconstrained
          ARCH_ID: {} # Unconstrained
          IMP_ID: {} # Unconstrained
          VENDOR_ID_BANK: {} # Unconstrained
          VENDOR_ID_OFFSET: {} # Unconstrained
          MISA_CSR_IMPLEMENTED: {} # Unconstrained
          TIME_CSR_IMPLEMENTED: {} # Unconstrained
          MTVAL_WIDTH: {} # Unconstrained
          PHYS_ADDR_WIDTH: {} # Unconstrained
          PRECISE_SYNCHRONOUS_EXCEPTIONS:
            schema:
              const: true
          TRAP_ON_ECALL_FROM_M:
            schema:
              const: true
          TRAP_ON_EBREAK:
            schema:
              const: true
          REPORT_VA_IN_MTVAL_ON_BREAKPOINT:
            schema:
              const: true
          REPORT_VA_IN_MTVAL_ON_INSTRUCTION_ACCESS_FAULT:
            schema:
              const: true
          REPORT_VA_IN_MTVAL_ON_LOAD_ACCESS_FAULT:
            schema:
              const: true
          REPORT_VA_IN_MTVAL_ON_STORE_AMO_ACCESS_FAULT:
            schema:
              const: true
          REPORT_ENCODING_IN_MTVAL_ON_ILLEGAL_INSTRUCTION:
            schema:
              const: true
          M_MODE_ENDIANESS:
            schema:
              const: little
          XLEN:
            schema:
              const: 32
          CONFIG_PTR_ADDRESS:
            schema:
              const: 0
    #XXX optional: {} # None
    optional:
    - name: Zifencei
      note: "This is just for testing. Zifencei extension isn't really optional for MC-1."
  
  requirement_groups:
    - name: MC-Unpriv
      description: |
        The MC-Unpriv defines unprivileged ISA requirements.
        Note that unprivileged ISA features are those that are usable in all privilege modes;
        they aren't only usable in U-mode (User-mode).
        It is unfortunate that both “Unprivileged” and “User” start with the letter “U” but they
        aren't the same thing.

      requirements:
      - name: REQ-UINST-001
        description: Should use little-endian byte order

      - name: REQ-UCSR-001-a
        description: Should raise an Illegal Instruction exception when writing to the `cycle` CSR

      - name: REQ-UCSR-001-b
        description: Should return the XLEN least-significant bits of the `mcycle` CSR when reading the `cycle` CSR
        
      - name: REQ-UCSR-002-a
        description: Should raise an Illegal Instruction exception when writing to the `time` CSR

      - name: REQ-UCSR-002-b
        description: Should return the XLEN least-significant bits of the `mtime` CSR when reading the `time` CSR
        when:
          param:
            TIME_CSR_IMPLEMENTED: true

      - name: REQ-UCSR-002-c
        description: Should raise an Illegal Instruction exception when reading the `time` CSR
        when:
          param:
            TIME_CSR_IMPLEMENTED: false

    - name: MC-Unpriv-32
      when:
        xlen: 32
      description: |
        The MC-Unpriv-32 defines unprivileged ISA requirements specific to 32-bit processors.
      requirements:
      - name: REQ-M32CSR-001-a
        description: Should raise an illegal instruction trap when writing the 'cycleh' CSR
      - name: REQ-M32CSR-001-b
        description: Should return the most-significant 32-bits of the `mcycle` CSR when reading `cycleh`
      - name: REQ-M32CSR-002
        description: Should return the most-significant 32-bits of the `minstret` CSR when reading `instreth`

    - name: MC-Priv
      description: |
        The MC-Priv defines Privileged ISA requirements.
      requirements:
      - name: REQ-PRIV-HARTID
        description: | 
          One hart in system has to have a HARTID of 0. Reading `mhartid` on other CSRs provides some value.