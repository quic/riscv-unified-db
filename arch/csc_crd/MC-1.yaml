# yaml-language-server: $schema=../../schemas/testplan_schema.json

MC-1:
  name: MC-1
  long_name: LONG NAME
  family: Microcontroller
  
  # semantic version within the CRD family
  version: "1.0"

  tsc_profile: null # there is no MC profile
  unpriv_isa_manual_revision: "20191213"
  priv_isa_manual_revision: "20190608-Priv-MSU-Ratified"
  debug_manual_revision: "0.13.2"
  description: "..."

  mandatory_extensions:
  - name: I
    version: "~> 2.1"
  - name: C
    version: "~> 2.2"
  - name: M
    version: "~> 2.0"
  - name: Zicsr
    version: "~> 2.0"
  - name: Zicntr
    version: "~> 2.0"

  optional_extensions:
  - name: B
    version: "~> 1.0"
    note: This is just for testing the database (B isn't a real MC-1 extension)

# Parameters listed here are IN SCOPE, otherwise assumed to be OUT OF SCOPE.
  in_scope_params:
    PRECISE_SYNCHRONOUS_EXCEPTIONS:
      schema:
        const: true
    TRAP_ON_UNIMPLEMENTED_CSR:
      schema:
        const: true
    TRAP_ON_UNIMPLEMENTED_INSTRUCTION:
      schema:
        const: true
    TRAP_ON_ECALL_FROM_M:
      note: REQ-UINST-017
      schema:
        const: true
    REPORT_VA_IN_MTVAL_ON_BREAKPOINT:
      schema:
        const: true
    REPORT_VA_IN_MTVAL_ON_INSTRUCTION_ACCESS_FAULT:
      schema:
        const: true
    REPORT_VA_IN_MTVAL_ON_LOAD_ACCESS_FAULT:
      schema:
        const: true
    REPORT_VA_IN_MTVAL_ON_STORE_AMO_ACCESS_FAULT:
      schema:
        const: true
    REPORT_ENCODING_IN_MTVAL_ON_ILLEGAL_INSTRUCTION:
      schema:
        const: true
    M_MODE_ENDIANESS:
      schema:
        const: little
    # OPT-RDTIME doesn't need constraint (behavior defined by TIME_CSR_IMPLEMENTED)
    # OPT-MTIME-PADDR doesn't have parameter -- it's considered non-ISA by the database
    # OPT-MTIMECMP-PADDR doesn't have parameter -- it's considered non-ISA by the database
    # OPT-MSIP-PADDR doesn't have parameter -- it's considered non-ISA by the database
    # OPT-MHARTID doesn't need constrained (behavior is a builtin)
    # OPT-MVENDORID doesn't need constrained (but behavior is controlled by VENDOR_ID_BANK and VENDOR_ID_OFFSET)
    # OPT-MARCHID doesn't need constrained (but behavior is controlled by ARCH_ID)
    # OPT-MIMPID doesn't need constrained (but behavior is controlled by IMP_ID)
    # OPT-MISA doesn't need constrained (but behavior is controlled by MISA_CSR_IMPLEMENTED)
    # OPT-CLINT doesn't need a parameter; it is mandated in the spec
    # OPT-CLIC doesn't need a paramter
    MTVEC_BASE_ALIGNMENT_DIRECT:
      note: OPT-MTVEC-ALIGN-DIRECT
      schema:
        const: 4
    MTVEC_BASE_ALIGNMENT_VECTORED:
      note: OPT-MTVEV-ALIGN-VECTORED
      schema:
        const: 4
    ARCH_ID: {} # Unconstrained
    XLEN:
      schema:
        const: 32

  requirement_groups:
    - name: MC-unpriv
      description: |
        The MC-Unpriv defines unprivileged ISA requirements.
        Note that unprivileged ISA features are those that are usable in all privilege modes;
        they aren't only usable in U-mode (User-mode).
        It is unfortunate that both “Unprivileged” and “User” start with the letter “U” but they
        aren't the same thing.

      requirements:
      - name: REQ-UINST-001
        description: Should use little-endian byte order

      - name: REQ-UCSR-001-a
        description: Should raise an Illegal Instruction exception when writing to the `cycle` CSR

      - name: REQ-UCSR-001-b
        description: Should return the XLEN least-significant bits of the `mcycle` CSR when reading the `cycle` CSR
        
      - name: REQ-UCSR-002-a
        description: Should raise an Illegal Instruction exception when writing to the `time` CSR

      - name: REQ-UCSR-002-b
        description: Should return the XLEN least-significant bits of the `mtime` CSR when reading the `time` CSR
        when:
          param:
            TIME_CSR_IMPLEMENTED: true

      - name: REQ-UCSR-002-c
        description: Should raise an Illegal Instruction exception when reading the `time` CSR
        when:
          param:
            TIME_CSR_IMPLEMENTED: false

    - name: MC-Unpriv-32
      when:
        xlen: 32
      description: |
        The MC-Unpriv-32 defines unprivileged ISA requirements specific to 32-bit processors.
      requirements:
      - name: REQ-M32CSR-001-a
        description: Should raise an illegal instruction trap when writing the 'cycleh' CSR
      - name: REQ-M32CSR-001-b
        description: Should return the most-significant 32-bits of the `mcycle` CSR when reading `cycleh`
      - name: REQ-M32CSR-002
        description: Should return the most-significant 32-bits of the `minstret` CSR when reading `instreth`
